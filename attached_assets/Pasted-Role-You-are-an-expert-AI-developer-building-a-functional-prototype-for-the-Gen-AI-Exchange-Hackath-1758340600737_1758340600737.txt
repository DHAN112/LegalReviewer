Role: You are an expert AI developer building a functional prototype for the Gen AI Exchange Hackathon.

Project Name: "Career Compass AI"

Objective: Create a simple yet effective web application that acts as a personalized career and skill advisor. The application must have two core, working features powered by a generative AI model. The goal is to demonstrate a proof-of-concept that can be presented at the hackathon.

Technology Stack:

Language/Framework: Python with Flask

Frontend: A single, clean index.html file using basic HTML and CSS (no complex frameworks needed).

AI Integration: Use placeholder functions (e.g., get_skill_gap_from_ai(...)) to simulate calls to a Large Language Model (LLM) API. The core logic should be built around these simulated calls.

Core Features to Implement:
AI-Powered Skill Gap Analysis:

User Interface: The homepage must contain a simple form with two text inputs:

A text area for "Your Current Skills & Experience" (e.g., "I know Python and SQL, and have experience creating dashboards with Tableau.").

A text input for "Your Desired Career Goal" (e.g., "Data Scientist specializing in NLP.").

Backend Logic: When the user submits the form, the backend will take these two inputs and pass them to a placeholder AI function. This function's purpose is to analyze the user's current skills against the requirements for their desired career and identify the most critical missing skills.

Personalized Learning Roadmap Generation:

Backend Logic: Using the list of "skill gaps" generated by the first feature, make a second call to another placeholder AI function.

Function Goal: This function should generate a simple, actionable learning roadmap based on the identified gaps.

Output Format: The roadmap should be structured clearly for the user and include:

Key Topics to Master: A bulleted list of 3-4 essential concepts or technologies to learn (e.g., "Natural Language Processing (NLP) Libraries," "Machine Learning Models like Transformers").

Suggested Project Idea: One practical project idea that would help the user apply the new skills (e.g., "Build a spam detection model for emails using Python and Scikit-learn.").

Requested File Structure & Code:
Please generate the complete code for this prototype, structured into the following two files:

app.py

This file should contain the complete Flask application.

Include the routing for the homepage (both GET and POST requests).

Implement the placeholder AI functions. In the comments for these functions, provide an example of what the prompt to the real LLM would look like. For example:

Python

# Prompt for LLM: "Based on the current skills 'Python, SQL, Tableau' and the career goal 'Data Scientist', what are the top 3 skill gaps?"
Ensure the final results (skill gaps and roadmap) are passed to the HTML template for rendering.

templates/index.html

This file should contain the full HTML structure for the user interface.

Include the input form.

Use Jinja2 templating to dynamically display the "Skill Gaps" and "Your Learning Roadmap" sections only after the user has submitted the form. Style it simply so it's clean and readable.